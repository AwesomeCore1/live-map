<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head'); %>
</head>

<body class="container-fluid h-75">
    <div class="jumbotron map" id="map">

    </div>
    </main>
    <%- include('../partials/footer') %>
</body>

</html>

<script>
    // https://github.com/bbecquet/Leaflet.RotatedMarker/blob/master/leaflet.rotatedMarker.js
    (function() {
    // save these original methods before they are overwritten
    var proto_initIcon = L.Marker.prototype._initIcon;
    var proto_setPos = L.Marker.prototype._setPos;

    var oldIE = (L.DomUtil.TRANSFORM === 'msTransform');

    L.Marker.addInitHook(function () {
        var iconOptions = this.options.icon && this.options.icon.options;
        var iconAnchor = iconOptions && this.options.icon.options.iconAnchor;
        if (iconAnchor) {
            iconAnchor = (iconAnchor[0] + 'px ' + iconAnchor[1] + 'px');
        }
        this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || 'center bottom' ;
        this.options.rotationAngle = this.options.rotationAngle || 0;

        // Ensure marker keeps rotated during dragging
        this.on('drag', function(e) { e.target._applyRotation(); });
    });

    L.Marker.include({
        _initIcon: function() {
            proto_initIcon.call(this);
        },

        _setPos: function (pos) {
            proto_setPos.call(this, pos);
            this._applyRotation();
        },

        _applyRotation: function () {
            if(this.options.rotationAngle) {
                this._icon.style[L.DomUtil.TRANSFORM+'Origin'] = this.options.rotationOrigin;

                if(oldIE) {
                    // for IE 9, use the 2D rotation
                    this._icon.style[L.DomUtil.TRANSFORM] = 'rotate(' + this.options.rotationAngle + 'deg)';
                } else {
                    // for modern browsers, prefer the 3D accelerated version
                    this._icon.style[L.DomUtil.TRANSFORM] += ' rotateZ(' + this.options.rotationAngle + 'deg)';
                }
            }
        },

        setRotationAngle: function(angle) {
            this.options.rotationAngle = angle;
            this.update();
            return this;
        },

        setRotationOrigin: function(origin) {
            this.options.rotationOrigin = origin;
            this.update();
            return this;
        }
    });
})();
</script>

<script>

    var bottomLeft = [0, 0];
    var topRight = [4096, 4096];
    var bounds = [bottomLeft, topRight];

    var popupid;

    var map = L.map('map', {
        crs: L.CRS.Simple,
        minZoom: -1.7,
        maxBounds: bounds,
        maxBoundsViscosity: 1.0,
        zoomControl: false
    });

    map.on('popupopen', function (e) {
        popupid = e.popup._source._myId;
    });


    var image = L.imageOverlay('https://img-cdn.fivemods.net/unsafe/filters:format(webp):quality(90):sharpen(1,0.3,true)/http://blog.damonpollard.com/wp-content/uploads/2013/09/GTAV_ATLUS_4096x4096.png', bounds).addTo(map);

    map.fitBounds(bounds);

</script>

<script src="/socket.io/socket.io.js"></script>

<script>
    
    var socket = io();
    var marker = new Array();

    socket.on('result', function (result) {

        markerDelAgain();

        const json = JSON.parse(result);

        function markerAdd() {
            for (i = 0; i < json.length; i++) {
                var userid = json[i]['id'];
                var username = json[i]['name'];
                var vehicle = json[i]['vehicle'] || "Just walking";
                var vehclass = json[i]['vehclass'];
                var Xcoord = json[i]['coords'][0];
                var Ycoord = json[i]['coords'][1];
                var Zcoord = json[i]['coords'][2];
                var heading = json[i]['heading'];
                var speedMS = json[i]['speedMS'] || 0;
                var headingText;
                var LamMarker;
                
                if (heading > 45 && heading <= 135) {
                    headingText = 'East';
                } else if (heading > 135 && heading <= 225) {
                    headingText = 'South';
                } else if (heading > 225 && heading <= 315) {
                    headingText = 'West';
                } else {
                    headingText = 'North';
                }
                
                var personIcon = L.icon({
                    iconUrl: 'https://ext-cdn.fivemods.net/img/xDBF2N1REK6f7GWr.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 21.2],
                    popupAnchor: [0, -21.2]
                });

                var planeIcon = L.icon({
                    iconUrl: 'https://ext-cdn.fivemods.net/img/RaVnXuM0j4Kkbzvl.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 16],
                    popupAnchor: [0, -16]
                });

                var carIcon = L.icon({
                    iconUrl: 'https://ext-cdn.fivemods.net/img/LhKwFqpIcNvblYDA.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 16],
                    popupAnchor: [0, -16]
                });
                
                var boatIcon = L.icon({
                    iconUrl: 'https://ext-cdn.fivemods.net/img/31j75MctQRrL6d9I.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 16],
                    popupAnchor: [0, -16]
                });

                var bikeIcon = L.icon({
                    iconUrl: 'https://ext-cdn.fivemods.net/img/ZaFC40vHgEkSAzN1.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 16],
                    popupAnchor: [-16, 0]
                })
                
                var helicopterIcon = L.icon({
                    iconUrl: 'https://docs.fivem.net/blips/radar_helicopter.png',
                    iconSize: [32, 32],
                    iconAnchor: [16, 16],
                    popupAnchor: [0, -16]
                });

                let usercoords = getPictureCoords(Xcoord, Ycoord);
                const carclass = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 17, 18, 19, 20];

                if (vehclass == 16) {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: planeIcon
                        }
                    );
                } else if (carclass.includes(vehclass)) {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: carIcon
                        }
                    );
                } else if (vehclass == 14) {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: boatIcon
                        }
                    );
                } else if (vehclass == 8) {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: bikeIcon
                        }
                    );
                } else if (vehclass == 15) {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: helicopterIcon
                        }
                    );
                } else {
                    LamMarker = new L.marker(
                        [usercoords[1], usercoords[0]], 
                        {
                            icon: personIcon
                        }
                    );
                }
               
                LamMarker._myId = userid;
                LamMarker.setRotationAngle(heading);
                LamMarker.addTo(map);
                if (popupid == userid) {
                    LamMarker.bindPopup(`
                    <div class="popup">
                        <h5 class="popup-name">${username}</h5>
                        <div class="popup-info" title="ID">
                            <img src="https://ext-cdn.fivemods.net/img/a14nEMrzIR6Wh2FG.svg" alt="ID">
                            <p>${userid}</p>
                        </div>
                        <div class="popup-info" title="Vehicle">
                            <img src="https://ext-cdn.fivemods.net/img/YBOlTpnHF3qvwi1C.svg" alt="Vehicle">
                            <p>${vehicle}</p>
                        </div>
                        <div class="popup-info" title="Speed">
                            <img src="https://ext-cdn.fivemods.net/img/Xa0ed9EpYWBZfLQc.svg" alt="Speedometer">
                            <p>${speedKMH} KPH / ${speedMH} MPH</p>
                        </div>
                        <div class="popup-info" title="Heading">
                            <img src="https://ext-cdn.fivemods.net/img/e01jSfDIA5Zm3XRK.svg" alt="Heading">
                            <p>${heading + ' / ' + headingText}</p>
                        </div>
                        <div class="popup-info" title="Altitude">
                            <img src="https://ext-cdn.fivemods.net/img/tPceydZqS2CQrBKj.svg" alt="Altitude">
                            <p>${Zcoord}</p>
                        </div>
                    </div>`)
                        .openPopup();

                } else {
                    LamMarker.bindPopup(`
                    <div class="popup">
                        <h5 class="popup-name">${username}</h5>
                        <div class="popup-info" title="ID">
                            <img src="https://ext-cdn.fivemods.net/img/a14nEMrzIR6Wh2FG.svg" alt="ID">
                            <p>${userid}</p>
                        </div>
                        <div class="popup-info" title="Vehicle">
                            <img src="https://ext-cdn.fivemods.net/img/YBOlTpnHF3qvwi1C.svg" alt="Vehicle">
                            <p>${vehicle}</p>
                        </div>
                        <div class="popup-info" title="Speed">
                            <img src="https://ext-cdn.fivemods.net/img/Xa0ed9EpYWBZfLQc.svg" alt="Speedometer">
                            <p>${speedKMH} KPH / ${speedMH} MPH</p>
                        </div>
                        <div class="popup-info" title="Heading">
                            <img src="https://ext-cdn.fivemods.net/img/e01jSfDIA5Zm3XRK.svg" alt="Heading">
                            <p>${heading + ' / ' + headingText}</p>
                        </div>
                        <div class="popup-info" title="Altitude">
                            <img src="https://ext-cdn.fivemods.net/img/tPceydZqS2CQrBKj.svg" alt="Altitude">
                            <p>${Zcoord}</p>
                        </div>
                    </div>`);
                }

                marker.push(LamMarker);

            }
        }

        function markerDelAgain() {
            for (i = 0; i < marker.length; i++) {
                map.removeLayer(marker[i]);
            }
            marker.length = 0;
        }

        markerAdd();

        $('.leaflet-popup-close-button').click(function() {
            popupid = 0;
        });

        function getPictureCoords(x, y) {
            const ZeroX = 1876;
            const ZeroY = 1331;
            const Scale = 3.037861303705727;
            var x = x / Scale;
            var y = y / Scale;
            trueX = ZeroX + x;
            trueY = ZeroY + y;
            return [Math.floor(trueX), Math.floor(trueY)];
        }

        $('.leaflet-control-attribution').hide()

    });




</script>